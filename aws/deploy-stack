#!/bin/bash
set -eu

if [ $# -ne 1 ]; then
  echo "You must provide the name of your environment's parameters file located in '/aws' "
  echo "usage: $0 [ environment ] eg. ./$0 integration ."
  exit 1
fi

PARAMETERS=$1
STACKNAME="sme-web-ui-${1}-stack"
REGION=ap-southeast-2
CHANGE_SET_NAME=sme-web-ui-`date +%s`

operation() {
  AWS_DEFAULT_REGION=$REGION AWS_REGION=$REGION aws cloudformation describe-stack-resources --stack-name $STACKNAME > /dev/null 2>&1
  exists=$?

  if [ 0 == $exists ]; then
    echo 'UPDATE'
  else
    echo 'CREATE'
  fi
}
op=$(operation)

create_change_set() {
  echo "creating change set for ${op} ${STACKNAME}"
  aws cloudformation create-change-set \
    --region ${REGION} \
    --change-set-name ${CHANGE_SET_NAME} \
    --change-set-type ${op} \
    --stack-name ${STACKNAME} \
    --template-body file://aws/sme-web-ui-stack.json \
    --parameters file://aws/params/$PARAMETERS-params.json

  aws cloudformation wait change-set-create-complete \
    --stack-name ${STACKNAME} \
    --change-set-name ${CHANGE_SET_NAME} > /dev/null 2>&1 || true
}

execute_change_set() {
  echo "executing new change set for ${STACKNAME}"
  aws cloudformation execute-change-set \
    --region ${REGION} \
    --change-set-name ${CHANGE_SET_NAME} \
    --stack-name ${STACKNAME}
}

delete_change_set() {
  echo "no changes, deleting empty change set for ${STACKNAME}"
  aws cloudformation delete-change-set \
    --region ${REGION} \
    --change-set-name ${CHANGE_SET_NAME} \
    --stack-name ${STACKNAME}
}

create_change_set

CHANGE_SET_LENGTH=$(aws cloudformation describe-change-set \
  --stack-name ${STACKNAME} \
  --change-set-name ${CHANGE_SET_NAME} | jq '.Changes | length')

if [ ${CHANGE_SET_LENGTH} != 0 ]; then
  execute_change_set
else
  delete_change_set
fi
